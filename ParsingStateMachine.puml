@startuml StateMachineParsingHttpMessage

hide empty description

' HTTP-message   = start-line CRLF
'                 *( field-line CRLF )
'                 CRLF
'                 [ message-body ]

' read the start-line into a structure, read each 
' header field line into a hash table by field name 
' until the empty line, and then use the parsed 
' data to determine if a message body is expected

' Replace a bare CR with SP before processing or forwarding the message

state "Request Line" as rqL
[*] --> rqL
rqL : method SP request-target SP HTTP-version
rqL -> rqL : Until \\r\\n
' Whitespace: SP, HTAB, VT (%x0B), FF (%x0C), or bare CR

' A server that receives a method longer than any that 
' it implements SHOULD respond with a 
' 501 (Not Implemented) status code

' A server that receives a request-target longer than any 
' URI it wishes to parse MUST respond with a 
' 414 (URI Too Long) status code

' It is RECOMMENDED that all HTTP senders and recipients 
' support, at a minimum, request-line lengths of 8000 octets

state "Request Header" as rh
rqL --> rh : First \\r\\n
rh : field-name ":" OWS field-value OWS
rh --> rh : \\r\\n
' A server MUST reject, with a response status code 
' of 400 (Bad Request), any received request message 
' that contains whitespace between a header field 
' name and colon.
' A proxy MUST remove any such whitespace from a 
' response message before forwarding the message downstream.

' Line Folding is deprecated except within the "message/http" media type
' https://www.rfc-editor.org/rfc/rfc9112.html#media.type.message.http

state "Request Body" as rb
rh --> rb : \\r\\n\\r\\n + Headerfield\n indicating a body
rb --> rb : read Data !=\n Content-Length
rb --> [*] : read Data == Content-Length

@enduml
